<?xml version="1.0" encoding="UTF-8"?>
<!--
##########################################################
Templates for

 User Screen, System Form.

Copyright (c) 2000-2008 Misys (http://www.misys.com),
All Rights Reserved. 

version:   1.0
date:      29/04/08
author:    Laure Blin
##########################################################
-->
<!DOCTYPE xsl:stylesheet [
  <!ENTITY nbsp "&#160;">
]>
<xsl:stylesheet 
		version="1.0" 
		xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
        xmlns:localization="xalan://com.misys.portal.common.localization.Localization"
        xmlns:securitycheck="xalan://com.misys.portal.common.security.GTPSecurityCheck"
        xmlns:security="xalan://com.misys.portal.security.GTPSecurity"
        xmlns:rundataservice="xalan://com.misys.portal.services.rundata.GTPRunDataService"
        xmlns:utils="xalan://com.misys.portal.common.tools.Utils"
        xmlns:defaultresource="xalan://com.misys.portal.common.resources.DefaultResourceProvider"
        exclude-result-prefixes="localization securitycheck security rundataservice utils defaultresource">
 
  <!-- 
   Global Parameters.
   These are used in the imported XSL, and to set global params in the JS 
  -->
  <xsl:param name="rundata"/>
  <xsl:param name="language">en</xsl:param>
  <xsl:param name="languages"/>
  <xsl:param name="nextscreen"/>
  <xsl:param name="draftMode"/>
  <xsl:param name="option"/>
  <xsl:param name="action"/>
  <xsl:param name="displaymode">edit</xsl:param>
  <xsl:param name="collaborationmode">none</xsl:param> <!-- set to none, counterparty or bank, depending on whether we are in a collab summary screen  -->
  <xsl:param name="main-form-name">fakeform1</xsl:param>
  <xsl:param name="operation">SAVE_FEATURES</xsl:param>
  <xsl:param name="isMakerCheckerMode"/>
  <xsl:param name="makerCheckerState"/>
  <xsl:param name="token"/>
  <xsl:param name="password_mimimum_length"/><!-- password policy -->
  <xsl:param name="password_maximum_length"/>
  <xsl:param name="password_charset"/>
  <xsl:param name="password_autogenerated"/>
  <xsl:param name="password_display_disabled"/>  
  <xsl:param name="email_required"/>
  <xsl:param name="userCaseSensitive">false</xsl:param>
  <xsl:param name="processdttm"/>
  <xsl:param name="canCheckerReturnComments"/>
  <xsl:param name="checkerReturnCommentsMode"/>
  <xsl:param name="allowReturnAction">false</xsl:param>
  <xsl:param name="base_currency"/>
  <xsl:param name="override_company_abbv_name"></xsl:param>
  <xsl:param name="masked_default_value">************</xsl:param>
  <xsl:param name="bankside"><xsl:choose><xsl:when test="$option='CUSTOMER_USER_PROFILE_MAINTENANCE_MC'">true</xsl:when><xsl:otherwise>false</xsl:otherwise></xsl:choose></xsl:param>
  <xsl:param name="employee_number_required"><xsl:value-of select="defaultresource:getResource('EMPLOYEE_NUMBER_REQUIRED')"/></xsl:param>
  <xsl:param name="department_required"><xsl:value-of select="defaultresource:getResource('DEPARTMENT_REQUIRED')"/></xsl:param>
  <xsl:param name="images_path"><xsl:value-of select="$contextPath"/>/content/images/</xsl:param>
  <xsl:param name="actionDownImage"><xsl:value-of select="$images_path"/>action-down.png</xsl:param>
  <xsl:param name="actionUpImage"><xsl:value-of select="$images_path"/>action-up.png</xsl:param>
  <xsl:param name="cashUnificationEnabled"><xsl:value-of select="defaultresource:getResource('CASH_UNIFICATION')"/></xsl:param>
  <xsl:param name="enablePhoneNumberValidation"><xsl:value-of select="defaultresource:getResource('VALIDATE_TELEPHONE_NUMBER')"/></xsl:param>
  <xsl:param name="enableMobileNumber"><xsl:value-of select="defaultresource:getResource('ENABLE_TELEPHONE_NUMBER')"/></xsl:param>
  <xsl:param name="mandateContactNumber"><xsl:value-of select="defaultresource:getResource('MANDATE_CONTACT_NUMBER')"/></xsl:param>
  <xsl:param name="fcmMandateAddress"><xsl:value-of select="defaultresource:getResource('FCM_MANDATE_ADDRESS')"/></xsl:param>
  
  <!-- Global Imports. -->
  <xsl:include href="../common/system_common.xsl" />
  <xsl:include href="sy_jurisdiction.xsl" />
  <xsl:include href="../common/maker_checker_common.xsl" />
  <xsl:include href="sy_user_entity_widget.xsl" />
  <xsl:include href="sy_user_entitlement_widget.xsl" />
  <xsl:include href="sy_reauthenticationdialog.xsl" />
  <xsl:include href="../common/e2ee_common.xsl" />
    
  <xsl:output method="html" version="4.01" indent="no" encoding="UTF-8" omit-xml-declaration="yes" />
  <xsl:template match="/">
   <xsl:apply-templates select="static_user"/>
  </xsl:template>
  
  <xsl:template match="static_user">
   <!-- Loading message  -->
   <xsl:call-template name="loading-message"/>
  
   <div>
    <xsl:attribute name="id"><xsl:value-of select="$displaymode"/></xsl:attribute>
    
    <!-- Form #0 : Main Form -->
    <xsl:call-template name="form-wrapper">
     <xsl:with-param name="name" select="$main-form-name"/>
     <xsl:with-param name="validating">Y</xsl:with-param>
     <xsl:with-param name="content">
      <xsl:call-template name="hidden-fields"/>
      <xsl:call-template name="user-main-details"/>
      <xsl:call-template name="user-prefs"/>
      <xsl:call-template name="user-other-details"/> 
  
  	  <xsl:if test="company_type[.='03' or .='06']  and entitlement_record">
          <xsl:call-template name="user-entitlement-grid"/>
      </xsl:if>
      <xsl:call-template name="role-details"/>
       
      <xsl:if test="company_type[.='03' or .='06'] and entity_record">
          <xsl:call-template name="user-entity-grid"/>
      </xsl:if>
      
      <xsl:if test="$canCheckerReturnComments = 'true'">
      	<xsl:call-template name="comments-for-return-mc">
      		<xsl:with-param name="value"><xsl:value-of select="return_comments"/></xsl:with-param>
      	</xsl:call-template>
       </xsl:if>
      <!--  Display common menu. -->
      <xsl:call-template name="maker-checker-menu"/>
      
     </xsl:with-param>
    </xsl:call-template>
 
    <xsl:call-template name="realform"/>
     <!-- Reauthentication -->
      <xsl:call-template name="reauthentication"/>
   </div>

   <!-- Javascript imports  -->
   <xsl:call-template name="js-imports"/>
   <!-- Password Policy Fields -->
   <xsl:call-template name="e2ee-password-policy">
	   	<xsl:with-param name="password_mimimum_length"><xsl:value-of select="$password_mimimum_length"/></xsl:with-param>
	   	<xsl:with-param name="password_maximum_length"><xsl:value-of select="$password_maximum_length"/></xsl:with-param>
	   	<xsl:with-param name="password_charset"><xsl:value-of select="$password_charset"/></xsl:with-param>
	   	<xsl:with-param name="allowUserNameInPasswordValue"><xsl:value-of select="defaultresource:getResource('ALLOW_USERNAME_IN_PASSWORD_VALUE')"/></xsl:with-param>
   </xsl:call-template>
  </xsl:template>
  
 <!--                                     -->  
 <!-- BEGIN LOCAL TEMPLATES FOR THIS FORM -->
 <!--                                     -->
 
 <!-- Additional JS imports for this form are -->
 <!-- added here. -->
 <xsl:template name="js-imports">
 <xsl:variable name="help_access_key">
  <xsl:choose>
 		<xsl:when test="security:isBank($rundata)"><xsl:value-of select="'BGM_01'"></xsl:value-of></xsl:when>
 		<xsl:otherwise><xsl:value-of select="'SY_USER'"></xsl:value-of></xsl:otherwise>
 	</xsl:choose>
 	</xsl:variable>
 <xsl:call-template name="client-side-pwdencryption"/>
  <xsl:call-template name="system-common-js-imports">
   <xsl:with-param name="xml-tag-name">static_user</xsl:with-param>
   <xsl:with-param name="binding">misys.binding.system.user_mc</xsl:with-param>
   <xsl:with-param name="override-help-access-key"><xsl:value-of select="$help_access_key"/></xsl:with-param>
   <xsl:with-param name="override-home-url">'/screen/<xsl:value-of select="$nextscreen"/>?option=<xsl:value-of select="$option"/><xsl:if test="$override_company_abbv_name!=''">&amp;company=<xsl:value-of select="$override_company_abbv_name"/></xsl:if>'</xsl:with-param>
  </xsl:call-template>
 </xsl:template>
  <!-- Template for client side password encryption -->
   <xsl:template name="client-side-pwdencryption">
 	<xsl:if test="defaultresource:getResource('ENABLE_CLIENT_SIDE_ENCRYPTION') = 'true'">
 	<xsl:call-template name="security-encryption-keys"/>
 	<div class="widgetContainer">
 	 	<xsl:call-template name="hidden-field">
    		<xsl:with-param name="name">clientSideEncryption</xsl:with-param>
    		<xsl:with-param name="value">Y</xsl:with-param>
   		</xsl:call-template>     
   	</div>
			<xsl:call-template name="security-pwd-encryption-js-imports"/>
			<script>
		dojo.ready(function(){
				dojo.mixin(misys, {
					encryptBeforeSubmit : function(){
						return misys.beforeSubmitEncryption();												
					},
					beforeSubmitValidations : function(){
						return misys.encryptBeforeSubmit();
					},
					encrypt : function(passPhrase){
						return misys.encryptText(passPhrase);
   	    	 		}
				});
			});
			</script>
		</xsl:if>
	</xsl:template>
 <!-- Additional hidden fields for this form are  -->
 <!-- added here. -->
 <xsl:template name="hidden-fields">
  <div class="widgetContainer">
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">brch_code</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">user_id</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">company_id</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">company_abbv_name</xsl:with-param>
   </xsl:call-template>
   <xsl:if test="login_id[.!=''] and $displaymode='edit'">
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">login_id</xsl:with-param>
    <xsl:with-param name="id">login_id_hidden</xsl:with-param>
   </xsl:call-template>
   </xsl:if>
   <xsl:call-template name="hidden-field">
	 <xsl:with-param name="name">userNameRegexValue</xsl:with-param>
	 <xsl:with-param name="value"><xsl:value-of select="defaultresource:getResource('LOGINID_VALIDATION_REGEX')"/></xsl:with-param>
   </xsl:call-template>
   <!-- Security token -->
  <!--  <xsl:call-template name="hidden-field">
     <xsl:with-param name="name">token</xsl:with-param>
   </xsl:call-template> -->
   <xsl:call-template name="hidden-field">
   	<xsl:with-param name="name">email_mandatory</xsl:with-param>
   	<xsl:with-param name="value"><xsl:value-of select="$email_required"/></xsl:with-param>
   </xsl:call-template>
      <xsl:if test="$option='CUSTOMER_USER_PROFILE_MAINTENANCE_MC'">
    <xsl:call-template name="hidden-field">
   	<xsl:with-param name="name">org_email</xsl:with-param>
   	<xsl:with-param name="value"><xsl:value-of select="email"/></xsl:with-param>
   </xsl:call-template>
   </xsl:if>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">entitlement_code</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">entitlement_id</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">subsidiary_id</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">subsidiary_code</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">default_subsidiary</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">subsidiary_code_List</xsl:with-param>
   </xsl:call-template>
   <xsl:call-template name="hidden-field">
    <xsl:with-param name="name">subsidiary_id_List</xsl:with-param>
   </xsl:call-template>
  <xsl:call-template name="localization-dialog"/>   
 </div>
 </xsl:template>
 
 <!--
  Main Details of the Company 
  -->
 <xsl:template name="user-main-details">
 <xsl:if test="login_id[.=''] and $displaymode='edit'">
	<xsl:call-template name="multichoice-field">
	<xsl:with-param name="name">clone_user</xsl:with-param>
	<xsl:with-param name="type">checkbox</xsl:with-param>
	<xsl:with-param name="label">XSL_CLONE_USER</xsl:with-param>
	</xsl:call-template>
	</xsl:if>
<xsl:call-template name="fieldset-wrapper">
   <xsl:with-param name="legend">XSL_HEADER_MAIN_DETAILS</xsl:with-param>
  <!--  <xsl:with-param name="button-type">
   		<xsl:if test="$hideMasterViewLink!='true'">mc-master-details</xsl:if>
   </xsl:with-param> -->
   <xsl:with-param name="override-displaymode">edit</xsl:with-param>
   <xsl:with-param name="content">
   	<!-- Company -->
    <xsl:call-template name="input-field">
     <xsl:with-param name="label">XSL_JURISDICTION_COMPANY</xsl:with-param>
      <xsl:with-param name="name">company_abbv_name</xsl:with-param>
      <xsl:with-param name="readonly">Y</xsl:with-param>
      <!-- To modify the mode from "Edit" to "View" -->
      <xsl:with-param name="override-displaymode">view</xsl:with-param>
     </xsl:call-template>
     <!-- Company is passing for customer or bank side -->
    <xsl:if test="$option='USER_ACCOUNT_MAINTENANCE_MC' or $option='BANK_USER_PROFILE_MAINTENANCE_MC'">
	  	<xsl:call-template name="hidden-field">
      		<xsl:with-param name="name">company</xsl:with-param>
      		<xsl:with-param name="value"><xsl:value-of select="company_abbv_name"/></xsl:with-param>
      	</xsl:call-template>
	</xsl:if>
    <!-- Login Id -->
    <xsl:if test="login_id[.!=''] and $displaymode='edit'">
      <xsl:call-template name="input-field">
       <xsl:with-param name="label">XSL_JURISDICTION_LOGIN_ID</xsl:with-param>
       <xsl:with-param name="name">login_id</xsl:with-param>
       <xsl:with-param name="size">32</xsl:with-param>
       <xsl:with-param name="maxsize">32</xsl:with-param>
       <xsl:with-param name="required">Y</xsl:with-param>
        <xsl:with-param name="override-displaymode">view</xsl:with-param>  
      </xsl:call-template>
      <xsl:call-template name="input-field">
       <xsl:with-param name="label">XSL_JURISDICTION_ORIG_LOGIN_ID</xsl:with-param>
       <xsl:with-param name="name">org_login_id</xsl:with-param>
       <xsl:with-param name="size">32</xsl:with-param>
       <xsl:with-param name="maxsize">32</xsl:with-param>
       <xsl:with-param name="required">Y</xsl:with-param>
        <xsl:with-param name="override-displaymode">view</xsl:with-param>  
      </xsl:call-template>      
   </xsl:if>

     
     <xsl:if test="login_id[.=''] or $displaymode='view'">

      <xsl:call-template name="input-field">
       <xsl:with-param name="label">XSL_JURISDICTION_LOGIN_ID</xsl:with-param>
       <xsl:with-param name="name">login_id</xsl:with-param>
       <xsl:with-param name="size">32</xsl:with-param>
       <xsl:with-param name="maxsize">32</xsl:with-param>
       <xsl:with-param name="required">Y</xsl:with-param>
       <xsl:with-param name="regular-expression"><xsl:value-of select="defaultresource:getResource('LOGINID_VALIDATION_REGEX')"/></xsl:with-param>
       <xsl:with-param name="uppercase">
	       <xsl:choose>
				<xsl:when test="$userCaseSensitive = 'true'">N</xsl:when>
				<xsl:otherwise>Y</xsl:otherwise>
			</xsl:choose>
       </xsl:with-param>
      </xsl:call-template>
      <xsl:call-template name="input-field">
       <xsl:with-param name="label">XSL_JURISDICTION_ORIG_LOGIN_ID</xsl:with-param>
       <xsl:with-param name="name">org_login_id</xsl:with-param>
       <xsl:with-param name="size">32</xsl:with-param>
       <xsl:with-param name="maxsize">32</xsl:with-param>
       <xsl:with-param name="required">Y</xsl:with-param>
        <xsl:with-param name="override-displaymode">view</xsl:with-param>  
      </xsl:call-template>
	  
	  <!-- Password -->
	  <xsl:if test= "$password_autogenerated != 'true' and $password_display_disabled != 'true' ">
		  <xsl:call-template name="input-field">
		   <xsl:with-param name="label">XSL_JURISDICTION_PASSWORD</xsl:with-param>
		   <xsl:with-param name="id">password_value</xsl:with-param>
	       <xsl:with-param name="name">password_value</xsl:with-param>
		   <xsl:with-param name="type">password</xsl:with-param>
		   <xsl:with-param name="size">12</xsl:with-param>
		   <xsl:with-param name="maxsize"><xsl:value-of select="defaultresource:getResource('PASSWORD_MAXIMUM_LENGTH')"/></xsl:with-param>
		   <xsl:with-param name="required">Y</xsl:with-param>
		  </xsl:call-template>
		
	   	  <!-- Confirm Password -->
	   	  <xsl:call-template name="input-field">
		   <xsl:with-param name="label">XSL_JURISDICTION_CONFIRM_PASSWORD</xsl:with-param>
		   <xsl:with-param name="id">password_confirm</xsl:with-param>
	       <xsl:with-param name="name">password_confirm</xsl:with-param>
		   <xsl:with-param name="type">password</xsl:with-param>
		   <xsl:with-param name="size">12</xsl:with-param>
		   <xsl:with-param name="maxsize"><xsl:value-of select="defaultresource:getResource('PASSWORD_MAXIMUM_LENGTH')"/></xsl:with-param>
		   <xsl:with-param name="required">Y</xsl:with-param>
	   	  </xsl:call-template>
   	 </xsl:if>
   	 </xsl:if>

     <!-- First Name -->
     <xsl:call-template name="input-field">
      <xsl:with-param name="label">XSL_JURISDICTION_FIRST_NAME</xsl:with-param>
      <xsl:with-param name="name">first_name</xsl:with-param>
      <xsl:with-param name="required">Y</xsl:with-param>
     </xsl:call-template>
     
     <!-- Last Name -->
     <xsl:call-template name="input-field">
      <xsl:with-param name="label">XSL_JURISDICTION_LAST_NAME</xsl:with-param>
      <xsl:with-param name="name">last_name</xsl:with-param>
      <xsl:with-param name="required">Y</xsl:with-param>
     </xsl:call-template>
  	<xsl:if test="static_company/type [. = '03']">
	  	<div>
	  		 <xsl:call-template name="country-field">
		      <xsl:with-param name="label">XSL_JURISDICTION_USER_ID_NO</xsl:with-param>
		      <xsl:with-param name="prefix">legal</xsl:with-param>
		      <xsl:with-param name="name">legal_country</xsl:with-param>
		      <xsl:with-param name="size">2</xsl:with-param>
		      <xsl:with-param name="maxsize">2</xsl:with-param>
		      <xsl:with-param name="fieldsize">xx-small</xsl:with-param>
		      <xsl:with-param name="uppercase">Y</xsl:with-param>
		      <xsl:with-param name="required">N</xsl:with-param>
		      <xsl:with-param name="appendClass">inlineBlock</xsl:with-param>
	     	</xsl:call-template>
	     	<xsl:text>&nbsp;</xsl:text>
	     	<xsl:call-template name="select-field">
		     	<xsl:with-param name="label"></xsl:with-param>
		     	<xsl:with-param name="name">legal_type</xsl:with-param>
		     	<xsl:with-param name="fieldsize">small</xsl:with-param>
		     	<xsl:with-param name="required">N</xsl:with-param>
		     	<xsl:with-param name="appendClass">inlineBlock legalType</xsl:with-param>
		     	<xsl:with-param name="options">
		     		<xsl:call-template name="legal_type_options"/>
		    	</xsl:with-param>
		    </xsl:call-template>
		    <xsl:call-template name="input-field">
		      <xsl:with-param name="label"></xsl:with-param>
		      <xsl:with-param name="maxsize"><xsl:value-of select="defaultresource:getResource('LEGAL_NO_FIELD_SIZE')"/></xsl:with-param>
		      <xsl:with-param name="name">legal_no</xsl:with-param>
		      <xsl:with-param name="required">N</xsl:with-param>
		      <xsl:with-param name="appendClass">inlineBlock legalType</xsl:with-param>
		      <xsl:with-param name="value">
	     		 <xsl:choose>
	     			<xsl:when test="$displaymode='view'">
	     			<xsl:variable name="legalNum"><xsl:value-of select="legal_no"/></xsl:variable>
	     			<xsl:value-of select="$masked_default_value"/></xsl:when>
	     			<xsl:otherwise><xsl:value-of select="legal_no"/></xsl:otherwise>
	     		 </xsl:choose>
	    	  </xsl:with-param>
		    </xsl:call-template>
		    <xsl:if test="$displaymode='view'">
			    <xsl:call-template name="i-icon-toggle">
					   <xsl:with-param name="label"></xsl:with-param>
					   <xsl:with-param name="animateDivId">eyeIconToggle</xsl:with-param>
					   <xsl:with-param name="prefix">eyeIcon</xsl:with-param>
					   <xsl:with-param name="value"><xsl:value-of select="legal_no"/></xsl:with-param>
					   <xsl:with-param name="toggleFieldName">legal_no_row</xsl:with-param>
					   <xsl:with-param name="show">Y</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
	  	</div>
	 </xsl:if>
	 <xsl:if test="static_bank/type [. = '02'] or static_bank/type [. = '01'] ">
		<xsl:call-template name="input-field">
			<xsl:with-param name="label">XSL_JURISDICTION_EMPLOYEE_NO</xsl:with-param>
			<xsl:with-param name="name">employee_no</xsl:with-param>
			<xsl:with-param name="required">
			<xsl:choose>
				<xsl:when test="$employee_number_required = 'true'">Y</xsl:when>
					<xsl:otherwise>N</xsl:otherwise>
				</xsl:choose>
			</xsl:with-param>
	    </xsl:call-template>
		<xsl:call-template name="input-field">
			<xsl:with-param name="label">XSL_JURISDICTION_EMPLOYEE_DEPARTMENT</xsl:with-param>
			<xsl:with-param name="name">employee_department</xsl:with-param>
			<xsl:with-param name="required">
				<xsl:choose>
					<xsl:when test="$department_required = 'true'">Y</xsl:when>
					<xsl:otherwise>N</xsl:otherwise>
				</xsl:choose>
			</xsl:with-param>
		</xsl:call-template>
	 </xsl:if>
	 <xsl:if test="company_type[.='03' or .='06']">
		<xsl:call-template name="input-field">
			<xsl:with-param name="label">XSL_JURISDICTION_EMPLOYEE_NO</xsl:with-param>
			<xsl:with-param name="name">employee_no</xsl:with-param>
			<xsl:with-param name="required">N</xsl:with-param>
	    </xsl:call-template>
		<xsl:call-template name="input-field">
			<xsl:with-param name="label">XSL_JURISDICTION_EMPLOYEE_DEPARTMENT</xsl:with-param>
			<xsl:with-param name="name">employee_department</xsl:with-param>
			<xsl:with-param name="required">N</xsl:with-param>
		</xsl:call-template>
	 </xsl:if>
     <!-- Address -->
     <xsl:call-template name="input-field">
	      <xsl:with-param name="label">XSL_JURISDICTION_ADDRESS</xsl:with-param>
	      <xsl:with-param name="name">address_line_1</xsl:with-param>
	      <xsl:with-param name="value"><xsl:value-of select="./address_line_1"/></xsl:with-param>
	      <xsl:with-param name="size">35</xsl:with-param>
	      <xsl:with-param name="maxsize">35</xsl:with-param>
	      <xsl:with-param name="required">
       			<xsl:choose>
				<xsl:when test="$fcmMandateAddress = 'true'">Y</xsl:when>
				<xsl:otherwise>N</xsl:otherwise>
				</xsl:choose>
		  </xsl:with-param>
     </xsl:call-template>
     <xsl:call-template name="input-field">
	      <xsl:with-param name="name">address_line_2</xsl:with-param>
	      <xsl:with-param name="value"><xsl:value-of select="./address_line_2"/></xsl:with-param>
	      <xsl:with-param name="size">35</xsl:with-param>
	      <xsl:with-param name="maxsize">35</xsl:with-param>
     </xsl:call-template>
     <xsl:call-template name="input-field">
         <xsl:with-param name="name">country_sub_div</xsl:with-param>
         <xsl:with-param name="value"><xsl:value-of select="./country_sub_div"/></xsl:with-param>
         <xsl:with-param name="size">35</xsl:with-param>
         <xsl:with-param name="maxsize">35</xsl:with-param>
     </xsl:call-template>
     <xsl:call-template name="input-field">
         <xsl:with-param name="name">county</xsl:with-param>
         <xsl:with-param name="value"><xsl:value-of select="./county"/></xsl:with-param>
          <xsl:with-param name="size">35</xsl:with-param>
         <xsl:with-param name="maxsize">35</xsl:with-param>
     </xsl:call-template>
     <xsl:call-template name="input-field">
         <xsl:with-param name="name">country_name</xsl:with-param>
         <xsl:with-param name="value"><xsl:value-of select="./country_name"/></xsl:with-param>
         <xsl:with-param name="size">35</xsl:with-param>
         <xsl:with-param name="maxsize">35</xsl:with-param>
     </xsl:call-template>
     <xsl:call-template name="input-field">
	      <xsl:with-param name="label">XSL_JURISDICTION_ADDRESS_POST_CODE</xsl:with-param>
	      <xsl:with-param name="name">dom</xsl:with-param>
	      <xsl:with-param name="value"><xsl:value-of select="./dom"/></xsl:with-param>
	      <xsl:with-param name="size"><xsl:value-of select="defaultresource:getResource('PINCODE_MAXLENGTH')"/></xsl:with-param>
	      <xsl:with-param name="maxsize"><xsl:value-of select="defaultresource:getResource('PINCODE_MAXLENGTH')"/></xsl:with-param>
	      <xsl:with-param name="fieldsize">small</xsl:with-param>
      <xsl:with-param name="required">N</xsl:with-param>
     </xsl:call-template>
     <!-- <xsl:call-template name="input-field">
      <xsl:with-param name="name">dom</xsl:with-param>
      <xsl:with-param name="value"><xsl:value-of select="./dom"/></xsl:with-param>
     </xsl:call-template> -->

    <xsl:variable name="defaultUserStatus"><xsl:value-of select="defaultresource:getResource('DEFAULT_CUSTOMER_USER_STATUS')"/></xsl:variable>
   	<xsl:variable name="defaultUserStatusFlag">
   		<xsl:choose>
   		<xsl:when test="$defaultUserStatus = 'active' or $defaultUserStatus = 'ACTIVE'">A</xsl:when>
   		<xsl:otherwise>I</xsl:otherwise>
   		</xsl:choose>
   	</xsl:variable>
   	<xsl:variable name="userStatusAcess"><xsl:value-of select="defaultresource:getResource('NEW_USER_STATUS_ENABLED')"/></xsl:variable>
   	<xsl:variable name="userStatusAccessFlag">
   		<xsl:choose>
   		<xsl:when test="$userStatusAcess = 'true' or $userStatusAcess = 'TRUE'">N</xsl:when>
   		<xsl:otherwise>Y</xsl:otherwise>
   		</xsl:choose>
	</xsl:variable>

	 <!-- Status -->     
	 <xsl:call-template name="select-field">
     	<xsl:with-param name="label">XSL_JURISDICTION_ACTIVE_LABEL</xsl:with-param>
     	<xsl:with-param name="name">actv_flag</xsl:with-param>
     	<xsl:with-param name="fieldsize">small</xsl:with-param>
     	<xsl:with-param name="required">Y</xsl:with-param>
     	<xsl:with-param name="readonly">
     			<xsl:choose>
	     			<xsl:when test="login_id[.=''] or (login_id[.!='']and $makerCheckerState='01')"><xsl:value-of select="$userStatusAccessFlag"/></xsl:when>
	     		</xsl:choose>
     	</xsl:with-param>
     	<xsl:with-param name="value">
	     		<xsl:choose>
	     			<xsl:when test="login_id[.='']"><xsl:value-of select="$defaultUserStatusFlag"/></xsl:when>
	     			<xsl:otherwise><xsl:value-of select="actv_flag"/></xsl:otherwise>
	     		</xsl:choose>
	    </xsl:with-param>
     	<xsl:with-param name="options">
     		<xsl:call-template name="actv_flag-options"/>
    	</xsl:with-param>
	</xsl:call-template>
    <xsl:if test="company_type[.='01' or .='02' or .='03' or .='06']">
    	<xsl:call-template name="authentication_mode"/>
    </xsl:if>
   </xsl:with-param>
  </xsl:call-template>
 </xsl:template>
 
  <!--
  Type and Preferences 
  -->
  <xsl:template name="user-prefs">
  	<xsl:variable name="current"><xsl:value-of select="language"/></xsl:variable>
  	<xsl:call-template name="fieldset-wrapper">
   		<xsl:with-param name="legend">XSL_HEADER_PREFERENCES_DETAILS</xsl:with-param>
   		<xsl:with-param name="content">
	  		<!-- Time Zone -->
	  		<xsl:call-template name="select-field">
     			<xsl:with-param name="label">XSL_JURISDICTION_TIME_ZONE</xsl:with-param>
     			<xsl:with-param name="name">time_zone</xsl:with-param>
     			<xsl:with-param name="required">Y</xsl:with-param>
     			<xsl:with-param name="options">
     				<xsl:choose>
     					<xsl:when test="$displaymode='edit'">
		     				<xsl:call-template name="time_zone-options"/>
     					</xsl:when>
     					<xsl:otherwise>
     						<xsl:value-of select="time_zone" />
     					</xsl:otherwise>
     				</xsl:choose>
     			</xsl:with-param>
     		</xsl:call-template>
	  		
	  		<!-- Selection of the language -->
	  		<xsl:call-template name="select-field">
    			<xsl:with-param name="label">XSL_JURISDICTION_LANGUAGE_LOCALE</xsl:with-param>
    			<xsl:with-param name="name">correspondence_language</xsl:with-param>
    			<xsl:with-param name="value">
				 <xsl:choose>
          			<xsl:when test="company_type[.='06']"><xsl:value-of select="$current"/></xsl:when>
         			<xsl:otherwise><xsl:value-of select="correspondence_language"/></xsl:otherwise>
           		 </xsl:choose>
           		</xsl:with-param>
     			<xsl:with-param name="required">Y</xsl:with-param>
     			<xsl:with-param name="options">
     			   <xsl:choose>
     			    <xsl:when test="$displaymode='edit'">
     			     <xsl:if test="string($languages) != ''">
	      			  <xsl:for-each select="$languages/languages/language">
	       			   <xsl:variable name="optionLanguage"><xsl:value-of select="."/></xsl:variable>
	   				   <option>
	    			    <xsl:attribute name="value"><xsl:value-of select="$optionLanguage"/></xsl:attribute>
	    			    <xsl:value-of select="localization:getDecode($language, 'N061', $optionLanguage)"/>
	   				   </option>
	      			  </xsl:for-each>
	      			 </xsl:if>
	      			</xsl:when>
     			    <xsl:otherwise>
     			     <xsl:variable name="optionLanguage"><xsl:value-of select="./correspondence_language"/></xsl:variable>
     			     <xsl:value-of select="localization:getDecode($language, 'N061', $optionLanguage)"/>
     			    </xsl:otherwise>
     			   </xsl:choose>
	      		  
     			</xsl:with-param>
    		</xsl:call-template>
    		
    		    		
    		<!-- Selection of the currency: in "system_common.xsl"-->
    		<xsl:call-template name="currency-template">
    			<xsl:with-param name="field_value">
    				<xsl:choose>
    					<xsl:when test="./cur_code"><xsl:value-of select="./cur_code"/></xsl:when>
    					<xsl:otherwise><xsl:value-of select="./base_cur_code"/></xsl:otherwise>
    				</xsl:choose>
    			</xsl:with-param>
    		</xsl:call-template>
      		
  		</xsl:with-param>
  	</xsl:call-template>
  </xsl:template>
 
 
 <!--
 Others Details 
  -->
  <xsl:template name="user-other-details">
  	<xsl:call-template name="fieldset-wrapper">
   		<xsl:with-param name="legend">XSL_HEADER_OTHER_DETAILS</xsl:with-param>
   		<xsl:with-param name="content">
    		<xsl:call-template name="input-field">
      			<xsl:with-param name="label">XSL_JURISDICTION_PHONE</xsl:with-param>
      			<xsl:with-param name="name">phone</xsl:with-param>
      			<xsl:with-param name="value"><xsl:value-of select="./phone"/></xsl:with-param>
      			<xsl:with-param name="size"><xsl:value-of select="defaultresource:getResource('MOBILE_FORMAT_MAXLENGTH')"/></xsl:with-param>
	      		<xsl:with-param name="maxsize"><xsl:value-of select="defaultresource:getResource('MOBILE_FORMAT_MAXLENGTH')"/></xsl:with-param>
       			<xsl:with-param name="required">
       			<xsl:choose>
				<xsl:when test="$mandateContactNumber = 'true'">Y</xsl:when>
				<xsl:otherwise>N</xsl:otherwise>
				</xsl:choose>
				</xsl:with-param>
    		</xsl:call-template>
			
			<xsl:call-template name="hidden-field">
				<xsl:with-param name="name">contact_number_regex</xsl:with-param>
				<xsl:with-param name="value"><xsl:value-of select="defaultresource:getResource('MOBILE_FORMAT_REGEX')"/></xsl:with-param>
			</xsl:call-template>
			
			<xsl:call-template name="hidden-field">
				<xsl:with-param name="name">enable_telephone_regex_validation</xsl:with-param>
				<xsl:with-param name="value"><xsl:value-of select="defaultresource:getResource('VALIDATE_TELEPHONE_NUMBER')"/></xsl:with-param>
			</xsl:call-template>
    		
    		<xsl:if test="$enableMobileNumber = 'true'">
   			<xsl:call-template name="input-field">
      			<xsl:with-param name="label">XSL_JURISDICTION_MOBILE</xsl:with-param>
      			<xsl:with-param name="name">telephone_number</xsl:with-param>
      			<xsl:with-param name="value"><xsl:value-of select="./telephone_number"/></xsl:with-param>
      			<xsl:with-param name="required">
      			<xsl:choose>
				<xsl:when test="$enablePhoneNumberValidation = 'true'">Y</xsl:when>
				<xsl:otherwise>N</xsl:otherwise>
				</xsl:choose>
      			</xsl:with-param>
      			<xsl:with-param name="size">
      			<xsl:choose>
				<xsl:when test="$enablePhoneNumberValidation = 'true'">
				<xsl:value-of select="defaultresource:getResource('TELEPHONE_NUMBER_MAXLENGTH')"/>
				</xsl:when>
				<xsl:otherwise>24</xsl:otherwise>
				</xsl:choose>
      			</xsl:with-param>
       			<xsl:with-param name="maxsize">
       			<xsl:choose>
				<xsl:when test="$enablePhoneNumberValidation = 'true'">
				<xsl:value-of select="defaultresource:getResource('TELEPHONE_NUMBER_MAXLENGTH')"/>
				</xsl:when>
				<xsl:otherwise>24</xsl:otherwise>
				</xsl:choose></xsl:with-param>
    		</xsl:call-template>
    		</xsl:if>
    		
    		<xsl:call-template name="input-field">
      			<xsl:with-param name="label">XSL_JURISDICTION_FAX</xsl:with-param>
      			<xsl:with-param name="name">fax</xsl:with-param>
      			<xsl:with-param name="value"><xsl:value-of select="./fax"/></xsl:with-param>
      			<xsl:with-param name="size"><xsl:value-of select="defaultresource:getResource('FAX_MAXLENGTH')"/></xsl:with-param>
	      		<xsl:with-param name="maxsize"><xsl:value-of select="defaultresource:getResource('FAX_MAXLENGTH')"/></xsl:with-param>
    		</xsl:call-template>
    		
    <xsl:if test="$displaymode='edit'">
	 <xsl:call-template name="input-field">
		<xsl:with-param name="label">XSL_JURISDICTION_EMAIL</xsl:with-param>
		<xsl:with-param name="name">email</xsl:with-param>
		<xsl:with-param name="value"><xsl:value-of select="./email"/></xsl:with-param>
		<xsl:with-param name="size">40</xsl:with-param>
		<xsl:with-param name="maxsize">255</xsl:with-param>
		<xsl:with-param name="required">
		<xsl:choose>
		<xsl:when test="$email_required = 'true'">Y</xsl:when>
		<xsl:otherwise>N</xsl:otherwise>
		</xsl:choose>
		</xsl:with-param>
		<xsl:with-param name="override-displaymode">edit</xsl:with-param>
	 </xsl:call-template>
	</xsl:if>

	<xsl:if test="$displaymode='view' and email[.!='']">
		<xsl:call-template name="fieldset-wrapper">
			<xsl:with-param name="content">
				<div class="label">
					<span class="field">
						<xsl:value-of select="localization:getGTPString($language, 'XSL_JURISDICTION_EMAIL')" />
					</span>
				</div>
					<span style="word-break:break-all;padding-right:30px;display:inline-block;max-width:925px;text-align:left;position:absolute">
						<xsl:value-of select="email"/>
					</span>
			</xsl:with-param>
		</xsl:call-template>
	</xsl:if>

    		<xsl:if test="company_type[.='03' or .='06'] and defaultresource:getResource('ME_TO_AUTHORISE_ENABLED') = 'true' ">
	    		<xsl:call-template name="multichoice-field">
				   <xsl:with-param name="name">pending_trans_notify</xsl:with-param>
				   <xsl:with-param name="type">checkbox</xsl:with-param>
				   <xsl:with-param name="label">XSL_JURISDICTION_PENDING_TRANS_NOTIFY</xsl:with-param>
				</xsl:call-template>
			</xsl:if>

			<!-- Users accessing Summit must declare their Summit user name -->
			<xsl:if test="securitycheck:hasPermission(utils:getUserACL($rundata),'sy_summit_username',utils:getUserEntities($rundata))">
				<xsl:call-template name="input-field">
					<xsl:with-param name="label">XSL_SUMMIT_USERNAME</xsl:with-param>
					<xsl:with-param name="name">summit_username</xsl:with-param>
					<xsl:with-param name="value"><xsl:value-of select="./summit_username"/></xsl:with-param>
					<xsl:with-param name="size">20</xsl:with-param>
					<xsl:with-param name="maxsize">20</xsl:with-param>
				</xsl:call-template>
			</xsl:if>
			
			<xsl:if test="company_type[.='01' or .='02']">
	     		<xsl:variable name="isRMFunEnabled">
	    			<xsl:value-of select="defaultresource:getResource('RM_GROUP_ENABLED')"/>
	    		</xsl:variable>
	    		<xsl:if test="$isRMFunEnabled='true'">
		     		<xsl:call-template name="input-field">
		    			<xsl:with-param name="button-type">rmGroup</xsl:with-param>
		    			<xsl:with-param name="label">XSL_PARA_RM_GROUP_LBL</xsl:with-param>
		    			<xsl:with-param name="name">rmGroup</xsl:with-param>
		    			<xsl:with-param name="value"><xsl:value-of select="./rmGroup"/></xsl:with-param>
		    			<xsl:with-param name="id">rmGroup</xsl:with-param>
		   			</xsl:call-template>
	   			</xsl:if>
   			</xsl:if>
    		
   		</xsl:with-param>
   	</xsl:call-template>
  </xsl:template>


 <!-- 
  Realform
  -->
 <xsl:template name="realform">
  <!-- Do not display this section when the counterparty mode is 'counterparty' -->
  <xsl:if test="$collaborationmode != 'counterparty'">
  <xsl:call-template name="form-wrapper">
   <xsl:with-param name="name">realform</xsl:with-param>
   <xsl:with-param name="method">POST</xsl:with-param>
   <xsl:with-param name="action"><xsl:value-of select="$contextPath"/><xsl:value-of select="$servletPath"/>/screen/<xsl:value-of select="$nextscreen"/></xsl:with-param>
    <xsl:with-param name="content">
     <div class="widgetContainer">
      <xsl:call-template name="hidden-field">
       <xsl:with-param name="name">operation</xsl:with-param>
       <xsl:with-param name="id">realform_operation</xsl:with-param>
       <xsl:with-param name="value" select="$operation"></xsl:with-param>
      </xsl:call-template>
      <xsl:call-template name="hidden-field">
       <xsl:with-param name="name">option</xsl:with-param>
       <xsl:with-param name="value">
	       <xsl:choose>
	       	<xsl:when test="$option != ''"><xsl:value-of select="$option"/></xsl:when>
	       	<xsl:otherwise>USER_ACCOUNT_MAINTENANCE_MC</xsl:otherwise>
	       </xsl:choose>
       </xsl:with-param>
      </xsl:call-template>
      <xsl:call-template name="hidden-field">
       <xsl:with-param name="name">TransactionData</xsl:with-param>
      </xsl:call-template>
      <xsl:if test="login_id[.!=''] and $operation!='ADD_FEATURES'">
      	<xsl:call-template name="hidden-field">
      		<xsl:with-param name="name">featureid</xsl:with-param>
      		<xsl:with-param name="value"><xsl:value-of select="login_id"/></xsl:with-param>
      	</xsl:call-template>
      </xsl:if>
      <!-- Company is only passed for customer user maintenance on bank side -->
	  <xsl:if test="$option='CUSTOMER_USER_PROFILE_MAINTENANCE_MC' or $option='BANK_USER_PROFILE_MAINTENANCE_MC'">
	  	<xsl:call-template name="hidden-field">
      		<xsl:with-param name="name">company</xsl:with-param>
      		<xsl:with-param name="value"><xsl:value-of select="company_abbv_name"/></xsl:with-param>
      	</xsl:call-template>
	  </xsl:if>
	  <xsl:call-template name="hidden-field">
       	<xsl:with-param name="name">token</xsl:with-param>
       	<xsl:with-param name="value"><xsl:value-of select="$token"/></xsl:with-param>
      </xsl:call-template>
      <xsl:call-template name="hidden-field">
       	<xsl:with-param name="name">processdttm</xsl:with-param>
       	<xsl:with-param name="value"><xsl:value-of select="$processdttm"/></xsl:with-param>
      </xsl:call-template>
      <xsl:call-template name="hidden-field">
       	<xsl:with-param name="name">mode</xsl:with-param>
       	<xsl:with-param name="value"><xsl:value-of select="$draftMode"/></xsl:with-param>
      </xsl:call-template>
      <xsl:call-template name="hidden-field">
       <xsl:with-param name="name">is_entity</xsl:with-param>
       <xsl:with-param name="id">is_entity</xsl:with-param>
       <xsl:with-param name="value"><xsl:value-of select="is_entity"/></xsl:with-param>
      </xsl:call-template>
      <xsl:call-template name="reauth_params"/>
      <xsl:call-template name="e2ee_transaction"/>
     </div>
    </xsl:with-param>
   </xsl:call-template>
   </xsl:if>
  </xsl:template>
  
  <!--
    Status type options.
   -->
  <xsl:template name="actv_flag-options">
   <xsl:choose>
    <xsl:when test="$displaymode='edit'">
     <option value="A">
       	<xsl:value-of select="localization:getGTPString($language, 'XSL_JURISDICTION_ACTIVE_YES')"/>
     </option>
     <option value="I">
      	<xsl:value-of select="localization:getGTPString($language, 'XSL_JURISDICTION_ACTIVE_NO')"/>
     </option>
      <option value="L">
      	<xsl:value-of select="localization:getGTPString($language, 'XSL_JURISDICTION_LOCKED')"/>
     </option>
    </xsl:when>
    <xsl:otherwise>
      	<xsl:if test="actv_flag[. = 'A']"><xsl:value-of select="localization:getGTPString($language, 'XSL_JURISDICTION_ACTIVE_YES')"/></xsl:if>
      	<xsl:if test="actv_flag[. = 'I']"><xsl:value-of select="localization:getGTPString($language, 'XSL_JURISDICTION_ACTIVE_NO')"/></xsl:if>
      	<xsl:if test="actv_flag[. = 'L']"><xsl:value-of select="localization:getGTPString($language, 'XSL_JURISDICTION_LOCKED')"/></xsl:if>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:template>
  
  <xsl:template name="legal_type_options">
   <xsl:choose>
    <xsl:when test="$displaymode='edit'">
     <option value="NRIC">
       	<xsl:value-of select="localization:getGTPString($language, 'XSL_LEGAL_TYPE_NRIC')"/>
     </option>
     <option value="PASSPORT">
      	<xsl:value-of select="localization:getGTPString($language, 'XSL_LEGAL_TYPE_PASSPORT')"/>
     </option>
     <option value="FIN">
      	<xsl:value-of select="localization:getGTPString($language, 'XSL_LEGAL_TYPE_FIN')"/>
     </option>
    </xsl:when>
    <xsl:otherwise>
      	<xsl:if test="legal_type[. = 'NRIC']"><xsl:value-of select="localization:getGTPString($language, 'XSL_LEGAL_TYPE_NRIC')"/></xsl:if>
      	<xsl:if test="legal_type[. = 'PASSPORT']"><xsl:value-of select="localization:getGTPString($language, 'XSL_LEGAL_TYPE_PASSPORT')"/></xsl:if>
      	<xsl:if test="legal_type[. = 'FIN']"><xsl:value-of select="localization:getGTPString($language, 'XSL_LEGAL_TYPE_FIN')"/></xsl:if>
    </xsl:otherwise>
   </xsl:choose>
  </xsl:template>
  
  <xsl:template name="authentication_mode">
   <xsl:choose>
    <xsl:when test="authentication">
	 <xsl:apply-templates select="authentication"/>
	</xsl:when>
	<xsl:otherwise>
	 <xsl:if test="reauth_mode[.!='']">
	  <xsl:call-template name="row-wrapper">
       <xsl:with-param name="label">XSL_JURISDICTION_REAUTHENTICATION_MODE_LABEL</xsl:with-param>
       <xsl:with-param name="id">reauth_mode_view</xsl:with-param>
       <xsl:with-param name="override-displaymode">view</xsl:with-param>
       <xsl:with-param name="content">
        <xsl:value-of select="localization:getDecode($language, 'N090', reauth_mode)"/>
       </xsl:with-param>
      </xsl:call-template>
	 </xsl:if>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:template>
	
 <xsl:template match="authentication">
  <xsl:call-template name="row-wrapper">
   <xsl:with-param name="override-displaymode">view</xsl:with-param>
   <xsl:with-param name="content">
    <xsl:call-template name="select-field">
     <xsl:with-param name="label">XSL_JURISDICTION_REAUTHENTICATION_MODE_LABEL</xsl:with-param>
     <xsl:with-param name="required">Y</xsl:with-param>
     <xsl:with-param name="name">reauth_mode</xsl:with-param>
     <xsl:with-param name="options">
      <xsl:choose>
       <xsl:when test="$displaymode='edit'">
        <xsl:apply-templates select="data_1"/>
       </xsl:when>
       <xsl:otherwise/>
      </xsl:choose>
     </xsl:with-param>
    </xsl:call-template>
   </xsl:with-param>
  </xsl:call-template>
 </xsl:template>
	
 <xsl:template match="data_1">
  <option>
	<xsl:attribute name="value"><xsl:value-of select="."/></xsl:attribute>
	<xsl:value-of select="localization:getDecode($language, 'N090', .)"/>
  </option>
 </xsl:template>
  
 <!-- ***************************************************************************************** -->
 <!-- ************************************* STATIC ROLE FORM ********************************** -->
 <!-- ***************************************************************************************** -->
<xsl:template name="role-details">
 <div class="widgetContainer">
  
  <xsl:choose>
   <!-- Show the roles setup for a bank user -->
   <xsl:when test="company_type[.='01' or .='02']">
   		<xsl:call-template name="fieldset-wrapper">
	   			<xsl:with-param name="legend">XSL_HEADER_LEVELS</xsl:with-param>
	   			<xsl:with-param name="content">
				   	<xsl:apply-templates select="group_record[group_name='global']" mode="user_authorisation_input">
					  <xsl:with-param name="dest"><xsl:value-of select="company_type"/></xsl:with-param>
					  <xsl:with-param name="dest_bis">02</xsl:with-param>
					  <xsl:with-param name="type">02</xsl:with-param>
					 </xsl:apply-templates>
				</xsl:with-param>
		</xsl:call-template>
    <xsl:call-template name="static_user_type_1_2"/>
   </xsl:when>       
   <!-- Show the roles setup for a customer user -->
   <xsl:when test="company_type[.='03' or .='06']">
  	<xsl:call-template name="static_user_type_3"/>
   </xsl:when>
  </xsl:choose>
  </div>
 </xsl:template>
 
 <!-- =========================================================================== -->
  	<!-- =================== Template STATIC USER/COMPANY TYPE 1 OR 2  ============= -->
  	<!-- =========================================================================== -->
	<xsl:template name="static_user_type_1_2">
		<!-- Header for global roles -->
		<xsl:call-template name="fieldset-wrapper">
   			<xsl:with-param name="legend">XSL_HEADER_ROLES</xsl:with-param>
   			<xsl:with-param name="content">
   			   	<xsl:apply-templates select="group_record[group_name='global']" mode="role_input">
					<!-- Only bank group roles are given -->
					<xsl:with-param name="dest"><xsl:value-of select="company_type"/></xsl:with-param>
					<xsl:with-param name="dest_bis">*</xsl:with-param>
					<xsl:with-param name="type">01</xsl:with-param>
				</xsl:apply-templates>

   			</xsl:with-param>
   		</xsl:call-template>
	</xsl:template>
	
	<!-- =========================================================================== -->
  	<!-- =================== Template STATIC USER/COMPANY TYPE 3  ================== -->
  	<!-- =========================================================================== -->
	<xsl:template name="static_user_type_3">
   		
   		<xsl:call-template name="fieldset-wrapper">
		<xsl:with-param name="legend">XSL_HEADER_LEVELS</xsl:with-param>
		<xsl:with-param name="content">
	   		 <xsl:for-each select="group_record[group_name!='global']">
	   		  <xsl:variable name="isAuthLevelSpecified" select="existing_roles/role" />
		   		<div style="width:100%;">
					<div class="userAccountsTableCell userAccountsTableCellOdd alignLeftWithPadding moderncolor" style="width:95%;">
						<xsl:value-of select="group_name"/> (<xsl:value-of select="group_abbv_name"/>)&nbsp;:
					</div>
					<div class="userAccountsTableCell userAccountsTableCellOdd alignCenterWithPadding moderncolor" style="width:3%;">
						<span>
							<xsl:attribute name="style">
									<xsl:choose>
									    <xsl:when test="count($isAuthLevelSpecified) > 0">
									     	 display:none;cursor:pointer;vertical-align:middle;
									    </xsl:when>
									    <xsl:otherwise>display:inline;cursor:pointer;vertical-align:middle;</xsl:otherwise>
									</xsl:choose>
							</xsl:attribute>
							<xsl:attribute name="id">auth_list_down_<xsl:value-of select="group_abbv_name"/></xsl:attribute>
							<a>
								<xsl:attribute name="onClick">misys.toggleAuthLevelSection("<xsl:value-of select="group_abbv_name"/>","down");</xsl:attribute>
								<img>
									<xsl:attribute name="src"><xsl:value-of select="utils:getImagePath($actionDownImage)"/></xsl:attribute>
									<xsl:attribute name="alt"><xsl:value-of select="localization:getGTPString($language, 'OPEN_PRODUCTS_ASSIGNMENT')"/></xsl:attribute>
								</img>
							</a>
						</span>
						<span>
							<xsl:attribute name="style">
									<xsl:choose>
									   <!--  <xsl:when test="($displaymode !='edit') and ($account_record/account_enabled[.='Y']) and (count($account_record/existing_products/product) > 0)"> -->
									    <xsl:when test="count($isAuthLevelSpecified) > 0">
									     	display:inline;cursor:pointer;vertical-align:middle;
									    </xsl:when>
									    <xsl:otherwise>display:none;cursor:pointer;vertical-align:middle;</xsl:otherwise>
									</xsl:choose>
							</xsl:attribute>
							<xsl:attribute name="id">auth_list_up_<xsl:value-of select="group_abbv_name"/></xsl:attribute>
							<a>
								<xsl:attribute name="onClick">misys.toggleAuthLevelSection("<xsl:value-of select="group_abbv_name"/>","up");</xsl:attribute>
								<img>
									<xsl:attribute name="src"><xsl:value-of select="utils:getImagePath($actionUpImage)"/></xsl:attribute>
									<xsl:attribute name="alt"><xsl:value-of select="localization:getGTPString($language, 'CLOSE_PRODUCTS_ASSIGNMENT')"/></xsl:attribute>
								</img>
							</a>
						</span>
					</div>
				</div>
				<xsl:variable name="bank_grp_rec">grp_rec_<xsl:value-of select="group_abbv_name"/></xsl:variable>
				<div  id="{$bank_grp_rec}" style="display:none;"> 
					<xsl:attribute name="style">
						<xsl:choose>
							<xsl:when test="count($isAuthLevelSpecified) > 0">display:inline;</xsl:when>
							<xsl:otherwise>display:none;</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
					<xsl:call-template name="populateAuthLevels">
						<xsl:with-param name="dest">03</xsl:with-param>
						<xsl:with-param name="dest_bis">*</xsl:with-param>
						<xsl:with-param name="type">02</xsl:with-param>
					</xsl:call-template>
				</div>
			</xsl:for-each>
			
		</xsl:with-param>
		</xsl:call-template>
    
		<!-- Header for global roles -->
		<xsl:call-template name="fieldset-wrapper">
   			<xsl:with-param name="legend">XSL_HEADER_ROLES</xsl:with-param>
   			<xsl:with-param name="content">
   				<xsl:apply-templates select="group_record[group_name='global']" mode="role_input">
					<xsl:with-param name="dest">03</xsl:with-param>
					<xsl:with-param name="dest_bis">*</xsl:with-param>
					<xsl:with-param name="type">01</xsl:with-param>
				</xsl:apply-templates>
   			</xsl:with-param>
   		</xsl:call-template>
	</xsl:template>
	
	
	 <!-- Template for Company Entities (whether already given or still available) in Input Mode -->
	  <xsl:template match="avail_entities/entity" mode="input">
	 
	   <xsl:variable name="current_entity"><xsl:value-of select="abbv_name"/></xsl:variable>
	   <!-- Check if the current entity belongs to the user -->
	   <xsl:if test="count(../../entities/entity/abbv_name[.=$current_entity])=0">
	    <xsl:choose>
	     <xsl:when test="$displaymode='edit'">
	      <xsl:if test="abbv_name[.!='']">
	       <option>
	        <xsl:attribute name="value"><xsl:value-of select="abbv_name"/></xsl:attribute>
	        <xsl:value-of select="abbv_name"/>
	       </option>
	      </xsl:if>
	     </xsl:when>
	     <xsl:otherwise>
	      <xsl:if test="abbv_name[.!='']">
	       <li><xsl:value-of select="abbv_name"/></li>
	      </xsl:if>
	     </xsl:otherwise>
	    </xsl:choose>
	   </xsl:if>
	  </xsl:template>
	
	  <!-- Template for User's Entities (whether already given or still available) in Input Mode -->
	  <xsl:template match="entities/entity" mode="input">
	    <xsl:choose>
	     <xsl:when test="$displaymode='edit'">
	      <xsl:if test="abbv_name[.!='']">
	       <option>
	        <xsl:attribute name="value"><xsl:value-of select="abbv_name"/></xsl:attribute>
	        <xsl:value-of select="abbv_name"/>
	       </option>
	      </xsl:if>
	     </xsl:when>
	     <xsl:otherwise>
	      <xsl:if test="abbv_name[.!='']">
	       <li><xsl:value-of select="abbv_name"/></li>
	      </xsl:if>
	     </xsl:otherwise>
	    </xsl:choose>
	  </xsl:template>
</xsl:stylesheet>