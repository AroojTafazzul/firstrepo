/**
 * Import Letter of Credit
 * Import Letter of Credit (ILC) is an undertaking to pay to a beneficiary (an exporter), issued by a bank on
 * behalf of its corporate customer (an importer; applicant) for procured goods or services. A payment is
 * released to the exporter against a presentation of specified documentation and in accordance with the terms
 * of the letter of credit.  The ILC reflects the transaction request from the perspective of an importer and
 * the importer's bank, typically known as the issuing bank.  'Issuance request' is the initial event that creates
 *  the ILC transaction event. This event could only be created once per ILC. If changes to the basic details
 * of the ILC are needed, an 'Amendment request' event could be created. Once the beneficiary submits their
 * documents and claims the payment, a 'Claims Received' event is created. The 'Amend' and 'Claims Received'
 * events can be created multiple times and at any point in the ILC lifecycle prior to its expiry.  Issuance
 * request can be for the final issuance of letter of credit by the issuing bank or if this request is marked as
 * \"Provisional\", then it is for vetting the text of the letter of credit by the issuing bank. On finalisation
 * of the text between the corporate customer and the bank, the actual letter of credit will be issued by the bank.
 *  There are two kinds of IDs in this API: id and eventId. The eventId is the identifier returned for events such as
 *  'Issuance', 'Amendment' and 'Claims Received'. The id is the identifier returned for the ILC master and it is
 *  created together with the 'Issuance' event. A master ILC transaction can have one 'Issuance' event and multiple
 *  'Amendment' and 'Claims Received' events.
 *
 * OpenAPI spec version: 1.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Account } from './account';
import { DocId } from './docId';


/**
 * Save message to bank for import letter of credit as a draft
 */
export interface SaveImportLetterOfCreditMessageToBank {
    /**
     * The type of the message to bank which can be sent by the customer to the bank.  CORRESPONDENCE- This type
     * of message can be used to send a generic communication or a message for an existing transaction. This can
     * be used for all the existing transactions available ACTION-REQUIRED- This type of message can be used to
     * send the response of a pending action generated by the bank for the customer on a specific transaction.
     * This can be used only for those transactions which requires an action REQUEST-SETTLEMENT- XXX
     */
    messageType?: SaveImportLetterOfCreditMessageToBank.MessageTypeEnum;
    /**
     * Unique identifier of the master transaction
     */
    masterIdentity?: string;
    /**
     * The settlement amount for the claim for the letter of credit, without the currency. This should be
     * in the same currency as of the letter of credit. This amount should be equal or less than the requested
     * amount in the claim. This is required in case of ACCEPT action only
     */
    settlementAmount?: string;
    /**
     * The details of the any additional instructions to bank
     */
    customerInstructions?: string;
    /**
     * Specifies the acceptance or rejection response to the event. This is required mandatorily, if the
     * message to bank type is ACTION-REQUIRED. In case of message type as CORRESPONDENCE, this should not be sent
     */
    actionRequired?: SaveImportLetterOfCreditMessageToBank.ActionRequiredEnum;
    /**
     * The details of any forward contract number to be supplied to the bank for the claim settlement. This
     * is required in case of ACCEPT action only
     */
    forwardContract?: string;
    /**
     * The account number for pricipal account to be used for debiting the claim amount. This is required in case of ACCEPT action only
     */
    principalAccount?: Account;
    /**
     * The account number for fee account to be used for debiting the charges if any for the claim amount. This
     *  is required in case of ACCEPT action only
     */
    feeAccount?: Account;
    docId?: DocId;
}
export namespace SaveImportLetterOfCreditMessageToBank {
    export type MessageTypeEnum = 'CORRESPONDENCE' | 'ACTION-REQUIRED' | 'REQUEST-SETTLEMENT';
    export const MessageTypeEnum = {
        CORRESPONDENCE: 'CORRESPONDENCE' as MessageTypeEnum,
        ACTIONREQUIRED: 'ACTION-REQUIRED' as MessageTypeEnum,
        REQUESTSETTLEMENT: 'REQUEST-SETTLEMENT' as MessageTypeEnum
    };
    export type ActionRequiredEnum = 'ACCEPT' | 'REJECT';
    export const ActionRequiredEnum = {
        ACCEPT: 'ACCEPT' as ActionRequiredEnum,
        REJECT: 'REJECT' as ActionRequiredEnum
    };
}
