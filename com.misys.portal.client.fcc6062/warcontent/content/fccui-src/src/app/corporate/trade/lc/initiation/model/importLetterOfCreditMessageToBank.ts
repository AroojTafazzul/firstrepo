/**
 * Import Letter of Credit
 * Import Letter of Credit (ILC) is an undertaking to pay to a beneficiary (an exporter), issue
 * d by a bank on behalf of its corporate customer (an importer; applicant) for procured goods or
 * services. A payment is released to the exporter against a presentation of specified documentatio
 * n and in accordance with the terms of the letter of credit.  The ILC reflects the transaction re
 * quest from the perspective of an importer and the importer's bank, typically known as the issuin
 * g bank.  'Issuance request' is the initial event that creates the ILC transaction event. This ev
 * ent could only be created once per ILC. If changes to the basic details of the ILC are needed, a
 * n 'Amendment request' event could be created. Once the beneficiary submits their documents and c
 * laims the payment, a 'Claims Received' event is created. The 'Amend' and 'Claims Received' event
 * s can be created multiple times and at any point in the ILC lifecycle prior to its expiry.  Issu
 * ance request can be for the final issuance of letter of credit by the issuing bank or if this req
 * uest is marked as \"Provisional\", then it is for vetting the text of the letter of credit by the
 * issuing bank. On finalisation of the text between the corporate customer and the bank, the actual letter
 * of credit will be issued by the bank.  There are two kinds of IDs in this API: id and eventId. The
 * eventId is the identifier returned for events such as 'Issuance', 'Amendment' and 'Claims Recei
 * ved'. The id is the identifier returned for the ILC master and it is created together with the
 * 'Issuance' event. A master ILC transaction can have one 'Issuance' event and multiple 'Amendment
 * ' and 'Claims Received' events.
 *
 * OpenAPI spec version: 1.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Account } from './account';
import { DocId } from './docId';


/**
 * Create correspondence/action response message for import letter of credit to the bank
 */
export interface ImportLetterOfCreditMessageToBank {
    /**
     * The type of the message to bank which can be sent by the customer to the bank.  CORRESPONDEN
     * CE- This type of message can be used to send a generic communication or a message for an existin
     * g transaction. This can be used for all the existing transactions available. ACTION-REQUIRED- This t
     * ype of message can be used to send the response of a pending action generated by the bank for the cus
     * tomer on a specific transaction. This can be used only for those transactions which requires an action
     * . REQUEST-SETTLEMENT- This type of message can be used to request for the settlement initiation by the
     *  importer. This can be used for all the existing transactions available.
     */
    messageType: ImportLetterOfCreditMessageToBank.MessageTypeEnum;
    /**
     * Unique identifier of the master transaction
     */
    masterIdentity: string;
    /**
     * The settlement amount for the claim for the letter of credit, without the currency. This should
     *  be in the same currency as of the letter of credit. This amount should be equal or less than t
     * he requested amount in the claim. This is required in case of Accept action only under ACTION-R
     * EQUIRED or REQUEST-SETTLEMENT. This should not be sent in case of CORRESPONDENCE or REJECT
     */
    settlementAmount?: string;
    /**
     * Specifies the acceptance or rejection response to the event. This is required mandatorily, if the m
     * essage to bank type is ACTION-REQUIRED. In case of message type as CORRESPONDENCE or REQUEST-SETT
     * LEMENT, this should not be sent
     */
    actionRequired?: ImportLetterOfCreditMessageToBank.ActionRequiredEnum;
    /**
     * The details of any forward contract number to be supplied to the bank for the claim settlement.
     *  This is required in case of Accept action only under ACTION-REQUIRED or REQUEST-SETTLEMENT. Thi
     * s should not be sent in case of CORRESPONDENCE or REJECT
     */
    forwardContract?: string;
    /**
     * The account number for principal account to be used for debiting the claim amount. This is required
     *  in case of Accept action only under ACTION-REQUIRED or REQUEST-SETTLEMENT. This should not be se
     * nt in case of CORRESPONDENCE or REJECT
     */
    principalAccount?: Account;
    /**
     * The account number for fee account to be used for debiting the charges if any for the claim amou
     * nt. This is required in case of Accept action only under ACTION-REQUIRED or REQUEST-SETTLEMENT. This
     * should not be sent in case of CORRESPONDENCE or REJECT
     */
    feeAccount?: Account;
    /**
     * The details of the any additional instructions to bank
     */
    customerInstructions: string;
    docId?: DocId;
}
export namespace ImportLetterOfCreditMessageToBank {
    export type MessageTypeEnum = 'CORRESPONDENCE' | 'ACTION-REQUIRED' | 'REQUEST-SETTLEMENT';
    export const MessageTypeEnum = {
        CORRESPONDENCE: 'CORRESPONDENCE' as MessageTypeEnum,
        ACTIONREQUIRED: 'ACTION-REQUIRED' as MessageTypeEnum,
        REQUESTSETTLEMENT: 'REQUEST-SETTLEMENT' as MessageTypeEnum
    };
    export type ActionRequiredEnum = 'ACCEPT' | 'REJECT';
    export const ActionRequiredEnum = {
        ACCEPT: 'ACCEPT' as ActionRequiredEnum,
        REJECT: 'REJECT' as ActionRequiredEnum
    };
}
