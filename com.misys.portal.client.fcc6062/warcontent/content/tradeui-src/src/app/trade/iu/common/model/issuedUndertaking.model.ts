import { Bank } from '../../../../model/bank.model';
import { Narrative } from '../../../../common/model/narrative.model';
import { Transaction } from '../../../../common/model/transaction.model';


export class IssuedUndertaking extends Transaction {

  templateId: string;
  bgIssDateTypeCode: string;
  bgIssDateTypeDetails: string;
  issDate: string;
  bgExpDateTypeCode: string;
  bgExpDate: string;
  bgExpEvent: string;
  bgAmdNo: string;
  bgAmdDate: string;
  bgCurCode: string;
  bgAmt: string;
  bgLiabAmt: string;
  bgReleaseAmt: string;
  bgOutstandingAmt: string;
  bgTypeCode: string;
  bgTypeDetails: string;
  bgRule: string;
  bgRuleOther: string;
  bgTextTypeCode: string;
  bgTextTypeDetails: string;
  bgReleaseFlag: string;
  applicantAbbvName: string;
  applicantName: string;
  applicantAddressLine1: string;
  applicantAddressLine2: string;
  applicantDom: string;
  applicantAddressLine4: string;
  applicantCountry: string;
  applicantReference: string;
  openChrgBrnByCode: string;
  corrChrgBrnByCode: string;
  beneficiaryAbbvName: string;
  beneficiaryName: string;
  beneficiaryAddressLine1: string;
  beneficiaryAddressLine2: string;
  beneficiaryDom: string;
  beneficiaryAddressLine4: string;
  beneficiaryCountry: string;
  beneficiaryReference: string;
  contactName: string;
  contactAddressLine1: string;
  contactAddressLine2: string;
  contactAddressLine4: string;
  contactDom: string;
  contactCountry: string;
  issuingBankTypeCode: string;
  advSendMode: string;
  contractReference: string;
  contractDate: string;
  contractAmt: string;
  contractCurCode: string;
  contractPct: string;
  principalActNo: string;
  feeActNo: string;
  textLanguage: string;
  textLanguageOther: string;
  bgTextDetailsCode: string;
  bgCode: string;
  forAccount: string;
  advBankConfReq: string;
  characterCommitment: string;
  deliveryTo: string;
  deliveryToOther: string;
  altApplicantName: string;
  altApplicantAddressLine1: string;
  altApplicantAddressLine2: string;
  altApplicantAddressLine4: string;
  altApplicantDom: string;
  altApplicantCountry: string;
  consortium: string;
  consortiumDetails: string;
  netExposureCurCode: string;
  netExposureAmt: string;
  guaranteeTypeCompanyId: string;
  guaranteeTypeName: string;
  deliveryChannel: string;
  provisionalStatus: string;
  leadBankFlag: string;
  bgRenewFlag: string;
  bgRenewOnCode: string;
  bgRenewalCalendarDate: string;
  renewRorNb: string;
  bgRenewForPeriod: string;
  bgAdviseRenewalFlag: string;
  bgAdviseRenewalDaysNb: string;
  bgRollingRenewalFlag: string;
  bgRollingRenewalNb: string;
  bgRollingCancellationDays: string;
  bgRenewAmtCode: string;
  bgFinalExpiryDate: string;
  originalXml: string;
  claimCurCode: string;
  claimAmt: string;
  claimReference: string;
  claimPresentDate: string;
  docRefNo: string;
  tnxAmt: string;
  tnxAmtCurCode: string;
  bgRollingDayInMonth: string;
  bgRollingRenewOnCode: string;
  bgRollingRenewForNb: string;
  bgRollingRenewForPeriod: string;
  projectedExpiryDate: string;
  contractNarrative: string;
  tenderExpiryDate: string;
  bgAvailableAmt: string;
  refId: string;
  recipientBank: Bank;
  issuingBank: Bank;
  confirmingBank: Bank;
  advisingBank: Bank;
  processingBank: Bank;
  requestedConfirmationParty: Bank;
  narrativeAdditionalInstructions: Narrative;
  boComment: Narrative;
  freeFormatText: Narrative;
  bgAmdDetails: Narrative;
  bgDocument: Narrative;
  xslFo: Narrative;
  returnComments: Narrative;
  cuAmt: string;
  cuCurCode: string;
  reqConfParty: string;
  maturityDate: string;
  latestResponseDate: string;
  bgConfInstructions: string;

 }
