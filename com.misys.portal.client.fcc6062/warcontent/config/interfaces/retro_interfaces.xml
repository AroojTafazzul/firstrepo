<?xml version="1.0" encoding="iso-8859-1"?>
<!--
	Misys Portal Interfaces Schema
	Copyright (c) 2000-2011 Misys (http://www.misys.com) All Rights Reserved.
-->
<interfaces xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.misys.com/portal/interfaces/xsd/interfaces.xsd">

	<interface name="xmloutV3" description="Output Transaction as V3-compatible XML to a file">
		<component name="environmentreader">
			<component name="filter">
				<properties>
					<property name="script">('CR' != event.product_code) &amp;&amp; ('03' == event.tnx_stat_code || '06' == event.tnx_stat_code)</property>
				</properties>
				<component name="xmlorgappender">
					<component name="outgoingboreferenceprocessor">
					<component name="botnxidappender"> 
						<component name="xmloutprocessor">
							<properties>
								<property name="directory" description="output base directory"/>
								<property name="embed.attachments" description="true to embed attachments into xml in Base64">false</property>
								<property name="export.attachments" description="true to export attachments into directory">false</property>
							</properties>
							<component name="xsltransformer">
								<properties>
									<property name="stylesheet.resource">/retro/xsl/outgoingV3.xsl</property>
								</properties>
								<component name="filewriter">
									<properties>
										<property name="directory.override">true</property>
										<property name="directory.isDynamic">false</property>
	                                    <property name="directory.name">${xml_output_directory_V3}</property>
									</properties>
								</component>
							</component>
						</component>
					</component> 
				</component>
			</component>
		</component>
	</component>
	</interface>
<interface name="prgmctpystaticdataxmlouttoTI" description="Output program counterparty static data file  as XML">
		<component name="environmentreader">	
			<component name ="staticdataprgmcptyoutgoingprocessor">
				<component name="staticdataxmloutprocessor">
					<properties>
						<property name="directory" description="Directory where the xml file is exported">${xml_output_directory_V3}</property>
					</properties>
					<component name="filewriter"/>
					<component name="jmssender">
						<!-- TI MQ Server properties -->
						<properties>
							<property name="initialContextFactory">${module.trade.initialContextFactory}</property>
							<property name="providerURL">${module.trade.providerURL}</property>
							<property name="factory">${module.trade.factory}</property>
							<property name="queue">${module.trade.out.queue}</property>
							<property name="invoker">${module.trade.invoker}</property>
							<property name="retry">${module.trade.retry}</property>
						</properties>
					</component>				
			    </component>
		  </component>				
		</component>	
	</interface>
	<interface name="xmljmsoutV32TI" description="Output Transaction as V3-compatible XML to a JMS Queue" onerror="logger" >
		<component name="environmentreader">
			<component name="filter">
				<properties>	<!-- Only products in TI are handled -->
					<property name="script">(${xmljmsoutV32TI.enable} ==true) &amp;&amp; ('LI' == event.product_code || 
									('LC' == event.product_code &amp;&amp; '03' == event.tnx_stat_code &amp;&amp; 
									('' != event.sub_tnx_stat_code &amp;&amp; '17' != event.sub_tnx_stat_code)) ||
                                    'SI' == event.product_code || 'SR' == event.product_code || 
                                    'SG' == event.product_code || ('BG' == event.product_code &amp;&amp; '03' == event.tnx_stat_code &amp;&amp;
                                    ('' != event.sub_tnx_stat_code &amp;&amp; '17' != event.sub_tnx_stat_code))  || 'CN' == event.product_code ||
                                    'TF' == event.product_code || 'IR' == event.product_code || 'BR' == event.product_code ||
                                    'IC' == event.product_code || 'EC' == event.product_code || 'FT' == event.product_code ||
                                    'IO' == event.product_code || 'LS' == event.product_code || 'EA' == event.product_code || 
                                    
                                    ('EL' == event.product_code &amp;&amp; '87' != event.sub_tnx_type_code &amp;&amp;
                                        '40' != event.prod_stat_code)  ||
                                    
                                    <!-- DF - Registration - Request -->
                                    ( 'IN' == event.product_code &amp;&amp; '02' == event.fscm_programme_code &amp;&amp;
                                        '20' == event.tnx_type_code &amp;&amp; '70' == event.prod_stat_code) ||
                                      
                                    <!-- DF - Financing Request -->
                                    ( 'IN' == event.product_code &amp;&amp; '02' == event.fscm_programme_code &amp;&amp;
                                    '13' == event.tnx_type_code &amp;&amp; '54' == event.prod_stat_code) ||
                                        
                                    <!-- EP - Early payment Request -->   
                                    ( 'IP' == event.product_code &amp;&amp; '01' == event.fscm_programme_code &amp;&amp;
                                   		'13' == event.tnx_type_code &amp;&amp; '52' == event.prod_stat_code) ||
                                   
                                    <!-- AF - Request for finance -->
                                    ( 'IN' == event.product_code &amp;&amp; '04' == event.fscm_programme_code &amp;&amp;
                                        '13' == event.tnx_type_code &amp;&amp; '96' == event.prod_stat_code) ||
                                        
                                    <!-- DF REQUEST Financing Request -->
                                    <!--( 'IN' == event.product_code &amp;&amp; '02' == event.fscm_programme_code &amp;&amp; 
                                        '20' == event.tnx_type_code) ||-->
                                    <!-- Invoice Financing programme -->
                                    	<!-- Invoice Payable acceptation -->
                                    <!-- ( 'IP' == event.product_code &amp;&amp; '03' == event.fscm_programme_code &amp;&amp;
                                        '13' == event.tnx_type_code &amp;&amp; '72' == event.sub_tnx_type_code &amp;&amp; 
                                        '48' == event.prod_stat_code) ||-->
                                        <!-- Invoice Receivable Financing Request -->
                                   ( 'IN' == event.product_code &amp;&amp; '03' == event.fscm_programme_code &amp;&amp; 
                                        '13' == event.tnx_type_code&amp;&amp; '78' == event.sub_tnx_type_code &amp;&amp; 
                                        '54' == event.prod_stat_code))
                    </property>                    
				</properties>
				<component name="filter">
					<properties>
						<property name="script">'03' == event.tnx_stat_code || (06 == event.tnx_stat_code &amp;&amp; ('IO' == event.product_code || 'EA' == event.product_code))</property>
					</properties>
					<!-- If the customer want some extra data to go as part of free format please uncomment the below component -->
					<!--  <component name="freeformattextappender"> -->
						<component name="xmlorgappender">
							<component name="outgoingboreferenceprocessor">
								<component name="filter">
									<properties>
										<property name="script">(0 != event.inp_user_id || (('IO' != event.product_code || 'EA' != event.product_code ) &amp;&amp; 43 != event.prod_stat_code))</property>
									</properties>
									<component name="botnxidappender">
									<component name="xmluserdetails">
									<component name="xmloutprocessor">
										<properties>
											<property name="directory" description="output base directory"/>
											<property name="embed.attachments" description="true to embed attachments into xml in Base64">true</property>
											<property name="export.attachments" description="true to export attachments into directory">false</property>
										</properties>
										<component name="xsltransformer">
											<properties>
												<property name="stylesheet.resource">/retro/xsl/outgoingV3.xsl</property>
											</properties>
											<component name="jmssender">
												<!-- TI MQ Server properties -->
												<properties>
													<property name="initialContextFactory">${module.trade.initialContextFactory}</property>
													<property name="providerURL">${module.trade.providerURL}</property>
													<property name="factory">${module.trade.factory}</property>
													<property name="queue">${module.trade.out.queue}</property>
													<property name="invoker">${module.trade.invoker}</property>
													<property name="retry">${module.trade.retry}</property>
													<property name="script">
													(
														('06' != event.fscm_programme_code) || ('06' == event.fscm_programme_code &amp;&amp; 'IP' == event.product_code)  
													)
													</property>													
												</properties>
												<component name="filewriter">
													<properties>
														<property name="directory.override">true</property>
														<property name="directory.isDynamic">false</property>
					                                    <property name="directory.name">${xml_output_directory_V3}</property>
													</properties>
												</component>
											</component>
										</component>
									</component>
									</component>
									</component>
								</component>
								<component name="filter">
									<properties>
										<property name="script">(0 == event.inp_user_id &amp;&amp; ('IO' == event.product_code || 'EA' == event.product_code )  &amp;&amp; 43 == event.prod_stat_code)</property>
									</properties>
									<component name="xmloutprocessor">
										<properties>
											<property name="directory" description="output base directory"/>
											<property name="embed.attachments" description="true to embed attachments into xml in Base64">false</property>
											<property name="export.attachments" description="true to export attachments into directory">false</property>
										</properties>
										<component name="xsltransformer">
											<properties>
												<property name="stylesheet.resource">/retro/xsl/outgoingV3.xsl</property>
											</properties>
											<component name="jmssender">
												<!-- TI MQ Server properties -->
												<properties>
													<property name="initialContextFactory">${module.trade.initialContextFactory}</property>
													<property name="providerURL">${module.trade.providerURL}</property>
													<property name="factory">${module.trade.factory}</property>
													<property name="queue">${module.trade.out.queue}</property>
													<property name="invoker">${module.trade.invoker}</property>
													<property name="retry">${module.trade.retry}</property>
												</properties>
												<component name="filewriter">
													<properties>
														<property name="directory.override">true</property>
														<property name="directory.isDynamic">false</property>
					                                    <property name="directory.name">${xml_output_directory_V3}</property>
													</properties>
												</component>
											</component>
										</component>
									</component>
								</component>
							</component>
						</component>
					<!-- </component>  -->
				</component>
			</component>
		</component>		
	</interface>
	<interface name="xmljmsoutTI" description="Output Transaction as XML to a JMS Queue">
		<component name="environmentreader">
			<component name="filter">
			<properties>	<!-- Only products in TI are handled -->
					<property name="script">(${xmljmsoutTI.enable} ==true) &amp;&amp; (('LI' == event.product_code || 'LC' == event.product_code ||
                                    'SI' == event.product_code || 'SR' == event.product_code || 
                                    'SG' == event.product_code || 'BG' == event.product_code || 'CN' == event.product_code || 'BK' == event.product_code ||
                                    'TF' == event.product_code || 'IR' == event.product_code || 'BR' == event.product_code ||
                                    'IC' == event.product_code || 'EC' == event.product_code || 'FT' == event.product_code ||
                                    'IO' == event.product_code || 'LS' == event.product_code || 'EA' == event.product_code || 'IN' == event.product_code || 'IP' == event.product_code ||
                                    ('EL' == event.product_code &amp;&amp; '87' != event.sub_tnx_type_code &amp;&amp;
                                        '40' != event.prod_stat_code)) &amp;&amp; ('17' != event.sub_tnx_stat_code &amp;&amp; '01' != event.prod_stat_code))
                    </property>                    
				</properties>
					<component name="filter">
							<properties>
								<property name="script">'03' == event.tnx_stat_code || '04' == event.tnx_stat_code || (06 == event.tnx_stat_code &amp;&amp; ('IO' == event.product_code || 'EA' == event.product_code))</property>
							</properties>
						<!-- If the customer want some extra data to go as part of free format please uncomment the below component -->
						<!--  <component name="freeformattextappender"> -->
							<component name="xmlorgappender">
								<component name="outgoingboreferenceprocessor">
									<component name="filter">
										<properties>
                                                 <property name="script">(0 != event.inp_user_id || (('IO' != event.product_code || 'EA' != event.product_code ) &amp;&amp; 43 != event.prod_stat_code)) &amp;&amp; !('IN' == event.product_code &amp;&amp; 01 == event.tnx_type_code  &amp;&amp; 'Y' == event.fscmProgram.buyer_acceptance_required )</property>
                                            </properties>
										<component name="botnxidappender">
											<component name="xmluserdetails">
												<component name="xmloutprocessor">
												<properties>
													<property name="directory" description="output base directory"/>
													<property name="embed.attachments" description="true to embed attachments into xml in Base64">true</property>
													<property name="export.attachments" description="true to export attachments into directory">false</property>
												</properties>
													<component name="jmssender">
														<!-- TI MQ Server properties -->
														<properties>
															<property name="initialContextFactory">${module.trade.initialContextFactory}</property>
															<property name="providerURL">${module.trade.providerURL}</property>
															<property name="factory">${module.trade.factory}</property>
															<property name="queue">${module.trade.out.queue}</property>
															<property name="invoker">${module.trade.invoker}</property>
															<property name="retry">${module.trade.retry}</property>
														</properties>
														<component name="filewriter">
															<properties>
																<property name="directory.override">true</property>
																<property name="directory.isDynamic">false</property>
							                                    <property name="directory.name">${xml_jms_output_directory}</property>
															</properties>
														</component>
													</component>
												</component>
											</component>
										</component>
									</component>
								</component>
							</component>
						</component>
					</component>
					<component name="filter">
						<properties>
							<property name="script">(0 == event.inp_user_id &amp;&amp; ('IO' == event.product_code || 'EA' == event.product_code )  &amp;&amp; 43 == event.prod_stat_code)</property>
						</properties>
						<component name="xmloutprocessor">
							<properties>
								<property name="directory" description="output base directory"/>
								<property name="embed.attachments" description="true to embed attachments into xml in Base64">false</property>
								<property name="export.attachments" description="true to export attachments into directory">false</property>
							</properties>
								<component name="jmssender">
									<!-- TI MQ Server properties -->
									<properties>
										<property name="initialContextFactory">${module.trade.initialContextFactory}</property>
										<property name="providerURL">${module.trade.providerURL}</property>
										<property name="factory">${module.trade.factory}</property>
										<property name="queue">${module.trade.out.queue}</property>
										<property name="invoker">${module.trade.invoker}</property>
										<property name="retry">${module.trade.retry}</property>
									</properties>
									<component name="filewriter">
										<properties>
											<property name="directory.override">true</property>
											<property name="directory.isDynamic">false</property>
		                                    <property name="directory.name">${xml_output_directory}</property>
										</properties>
									</component>
								</component>
						</component>
					</component>
				</component>		
		</interface>	
	<interface name="xmlretry" description="Output Transaction as V3-compatible XML to a JMS Queue" onerror="logger" >
		<component name="interfacemessagereader">
			<component name="jmssender">
				<!-- TI MQ Server properties -->
				<properties>
					<property name="initialContextFactory">${module.trade.initialContextFactory}</property>
					<property name="providerURL">${module.trade.providerURL}</property>
					<property name="factory">${module.trade.factory}</property>
					<property name="queue">${module.trade.out.queue}</property>
					<property name="invoker">${module.trade.invoker}</property>
					<property name="retry">${module.trade.retry}</property>
				</properties>
				<component name="filewriter">
					<properties>
						<property name="directory.override">true</property>
						<property name="directory.isDynamic">false</property>
                        <property name="directory.name">${xml_output_directory_V3}</property>
					</properties>
				</component>
			</component>
			<component name="interfacecleaner"/>
		</component>
	</interface>
	
	<interface name="xmlinV3" onerror="logger" description="Load a V3-Product Transaction from the environment">
		<component name="environmentreader">
			<transaction>
				<component name="filepathprocessor">
					<component name="xsltransformer">
						<properties>
							<property name="stylesheet.resource">/retro/xsl/incomingV3.xsl</property>
						</properties>
						<component name="incominginitiator">
							<properties>
								<property name="validation" description="Whether to validate against the corresponding xsd">false</property>								
							</properties>
							<component name="documentparser">
								<component name="useridsanddttmmanager">
									<component name="incomingboreferenceprocessor">
										<!-- Uncomment tiattachmentmergeprocessor component when connected to TI 1.4 -->
										<!-- <component name="tiattachmentmergeprocessor"> -->
											<component name="attachmentsmanager">
												<properties>
													<property name="mode">database</property>
												</properties>
												<component name="actionrequiredhandler">
													<component name="genericdocumentgenerator">
														<component name="incomingvalidator">
														<component name="databaseserializer"/>
														<component name="bankcurrencyprocessor"/>
														<component name="filter">
															<properties><property name="script">event.tnx_stat_code == '04'</property></properties>
															<component name="mailformatter" failsafe="true">
																<properties>
																	<property name="destination">00</property>
																	<property name="titlekey">CUSTOMER_SUBMISSION_ALERT_EMAIL_TITLE</property>
																	<property name="bodykey">CUSTOMER_SUBMISSION_ALERT_EMAIL_BODY</property>
																</properties>
																<component name="sendmail"/>
															</component>
														</component>
														<component name="filter">
															<properties><property name="script">event.tnx_stat_code == '03'</property></properties>
															<component name="mailformatter" failsafe="true">
																<properties>
																	<property name="destination">01</property>
																	<property name="titlekey">BANK_SUBMISSION_ALERT_EMAIL_TITLE</property>
																	<property name="bodykey">BANK_SUBMISSION_ALERT_EMAIL_BODY</property>
																</properties>
																<component name="sendmail"/>
															</component>
														</component>
														<!-- Added for the TMA START : Create a new TM event from the IO when,
														1) BO acknowledges the new provisional IO (prod_stat_code - 98, tnx_type_code - 01), and provisional buyer initiated amendment (prod_stat_code - 98, tnx_type_code - 03)
														2) BO acknowledges the re-submission of the IO (prod_stat_code - 55)
														3) BO acknowledges the closure of the IO (prod_stat_code - 77) -->
														<component name="filter">
															<properties><property name="script">event.tnx_stat_code == '04' &amp;&amp; event.product_code == 'IO' &amp;&amp; ((event.prod_stat_code == '98' &amp;&amp; (event.tnx_type_code == '01' || event.tnx_type_code == '03')) || ((event.tnx_type_code == '55' &amp;&amp; event.prod_stat_code == 'D1')||(event.tnx_type_code == '55' &amp;&amp; event.prod_stat_code == 'D2')) || event.prod_stat_code == '55' || event.prod_stat_code == '77' ||(event.prod_stat_code == 'AA' &amp;&amp; event.tnx_type_code == '55') ||(event.prod_stat_code == 'D4' &amp;&amp; event.tnx_type_code == '55') || ((event.prod_stat_code == 'A8' || event.prod_stat_code == '32') &amp;&amp; event.tnx_type_code == '03' &amp;&amp; event.sub_tnx_type_code == '83'))</property></properties>
																<component name="iototsmtgenerator">
																	<component name="databaseserializer"/>
																	<component name="xmloutprocessor">
																		<component name="filewriter"/>
																	</component>
																</component>
														</component>
														<!-- This filter is defined for Export Open Account -->
														<component name="filter">
															<properties><property name="script">event.tnx_stat_code == 04 &amp;&amp; event.product_code == 'EA' &amp;&amp; (event.prod_stat_code == '55' || event.prod_stat_code == '77' || (event.prod_stat_code == 'A6' &amp;&amp; event.tnx_type_code == '61') || (event.prod_stat_code == '98' &amp;&amp; event.tnx_type_code == '01') || ((event.prod_stat_code == 'A8' || event.prod_stat_code == '32') &amp;&amp; event.tnx_type_code == '03' &amp;&amp; event.sub_tnx_type_code == '69'))</property></properties>
															<component name="eatotsmtgenerator">
																<component name="databaseserializer"/>
																<component name="xmloutprocessor">
																	<component name="filewriter"/>
														    	</component>
														    </component>
														</component>
														<!-- End of filter defined for Export Open Account -->
														<!-- Added for the TMA END-->
														<!-- START :: Added to update CR from incoming CN
														07 - when invoices are updated from BO 
														01 - Not Processed
														A0 - Technical Rejection -->
														<component name="filter">
															<properties>
																<property name="script">event.product_code == 'CN' &amp;&amp; ('07' == event.prod_stat_code || '01' == event.prod_stat_code || 'A0' == event.prod_stat_code)</property>
															</properties>
															<component name="creditnoteconnector">
																<component name="databaseserializer"/>
															</component>
														</component>
														<!-- END :: Added to update CR from incoming CN -->
														<!-- Added to update IN/IP incoming transactions -->
														<component name="filter">
															<properties>
																<property name="script">event.prod_stat_code == '07' &amp;&amp; (event.product_code == 'IN' || event.product_code == 'IP')</property>
															</properties>
															<component name="fscmconnector">
																<component name="databaseserializer"/>
															</component>
														</component>
														<!-- Added to update IN from incoming IP [Start] -->
														<component name="filter">
															<properties>
																<property name="script">((('IP' == event.product_code) &amp;&amp; (06 == event.fscm_programme_code || 05 == event.fscm_programme_code) || 'IN' == event.product_code) &amp;&amp;  (46 == event.prod_stat_code || 47 == event.prod_stat_code || 04 == event.prod_stat_code || 01 == event.prod_stat_code || 56 == event.prod_stat_code)) || ('BK' == event.product_code &amp;&amp; ((03 == event.tnx_stat_code &amp;&amp; 54 == event.prod_stat_code)|| (04 == event.tnx_stat_code &amp;&amp; (04 == event.prod_stat_code || D5 == event.prod_stat_code || D6 == event.prod_stat_code))))</property>
															</properties>
															<component name="fscmconnector">
																<component name="useridsanddttmmanager">
																	<component name="databaseserializer" />
																</component>
															</component>										
														</component>
														<!-- Added to update IN from incoming IP [End] -->
														</component>
														<component name="filter">
															<properties>
																<property name="script">(${export.tnxdata2fbi.enable}==true)</property>
															</properties>
															<component name="tnxdata2fbiprocessor">
																<component name="multibranchjmssender">
											                            <properties> 
											                                    <property name="initialContextFactory">org.apache.activemq.jndi.ActiveMQInitialContextFactory</property> 
											                                    <property name="providerURL">${provider_url}</property> 
											                                    <property name="factory">QueueConnectionFactory</property> 
											                                    <property name="queue">dynamicQueues/${fbi_tnx_queue_name}</property> 
											                   		  	</properties>
											                            <component name="filewriter"/>
											                     </component>
															</component>
														</component>
													</component>
												</component>
											</component>
										<!-- </component> -->
									</component>
								</component>
							</component>
						</component>
					</component>
				</component>
			</transaction>
		</component>		
	</interface>

	<!-- The interface xmlin2output is required only when Portal is connected to TI 4.1.7 -->
	<interface name="xmlin2output" onerror="logger" description="Load a V3-Product Transaction from the environment into GTP_OUTPUT_CONTENT table">
		<component name="environmentreader">
			<transaction>
				<component name="attachmentfilenamesprocessor">
					<component name="binaryoutputprocessor">
						<properties>
							<property name="recordtype">02</property>
						</properties>
						<component name="outputwriter">
							<properties>
								<property name="filename.name">filename</property>
								<property name="type">02</property>
							</properties>
						</component>
					</component>
				</component>
			</transaction>
		</component>
	</interface>

</interfaces>

